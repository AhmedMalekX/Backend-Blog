type User {
    id: ID!
    firstName: String!
    lastName: String!
    role: String!
    email: String!
    password: String
    username: String!
    profileStatus: Boolean
    userStatus: String!
    followers: Int!
    following: Int!
    posts: [Post]
}

type Query {
    getAllUsers: [User!]!
    getUser(id: ID!): User!
    getCurrentUser: User
}

input RegisterInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
}

input LoginInput {
    userMethod: String
    password: String
}

type Token {
    token: String
}

type Mutation {
    register(data: RegisterInput!): Token
    login(data: LoginInput!): Token
    forgetPassword(email: String!): Boolean!
    resetPassword(token: String!, newPassword: String): Boolean!
    updatePassword(oldPassword: String!, newPassword: String!): Boolean!
}
